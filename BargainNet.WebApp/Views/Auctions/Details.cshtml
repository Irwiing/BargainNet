@model BargainNet.Core.Entities.AdAuction

@{
    ViewData["Title"] = "Details";
    bool isOwner = (bool)ViewData["IsOwner"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>
<div class="modal" id="offerModal" tabindex="-1" role="dialog" aria-labelledby="offerModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="offerModalLabel">Dar lance</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="offer" class="modal-body">

            </div>
        </div>
    </div>
</div>
<div class="row col-12">
    <div class="col-6">
        <div class="d-flex justify-content-between">
            <h4>AdAuction</h4>
            @if (isOwner)
            {
                @Html.ActionLink("Finalizar", "EndAuction", new { idAuction = @Model.Id } , new { @class = "btn btn-danger" })
            }
        </div>
        <input id="idAuct" type="hidden" name="idAuction" value="@Model.Id" />
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.AdPic)
            </dt>
            <dd class="col-sm-10">
                <img class="image-profile " src="@Model.AdPic" />
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Value)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Value)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Brand)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Brand)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Model)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Model)
            </dd>
        </dl>
    </div>
    <div class="col-6">
        <div class="d-flex justify-content-between">
            <h4>Lances</h4>
            @if (!isOwner)
            {
                <button type="button" onclick="createOffer()" class="btn btn-primary" data-toggle="modal" data-target="#offerModal">
                    Dar lance
                </button>
            }
        </div>
        <hr />

        <div id="ListOffer"></div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        const id = $('#idAuct').val()
        const updateOffer = async () => {
            await $.ajax({
                type: 'GET',
                url: `/Auctions/ListOffer/${id}`,
                dataType: 'html',
                cache: false,
                async: true,
                success: function (data) {
                    $('#ListOffer').html(data);
                }
            });
        }
       const createOffer = async () => {
            await $.ajax({
                type: 'GET',
                url: `/Auctions/CreateOffer/${id}`,
                dataType: 'html',
                cache: false,
                async: true,
                success: function (data) {
                    $('#offer').html(data);
                }
            });
        }
        $(document).ready(function () {
            setInterval(updateOffer, 5050);
        });
    </script>
}
